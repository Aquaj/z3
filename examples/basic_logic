#!/usr/bin/env ruby

require_relative "../lib/z3"

def check_if_true_is_true
  a = Z3.True
  b = Z3.True
  solver = Z3::Solver.new
  puts "Checking if true == true"
  solver.prove!(a == b)
end

def check_if_true_is_false
  a = Z3.True
  b = Z3.False
  solver = Z3::Solver.new
  puts "Checking if true == false"
  solver.prove!(a==b)
end

# We prove it by checking that negation is unsatisfiable
def check_de_morgan_law_1
  a = Z3.Bool("a")
  b = Z3.Bool("b")
  solver = Z3::Solver.new
  puts "Proving ~(a & b) == (~a | ~b)"
  solver.prove!(~(a & b) == (~a | ~b))
end

def check_de_morgan_law_2
  a = Z3.Bool("a")
  b = Z3.Bool("b")
  solver = Z3::Solver.new
  puts "Proving ~(a | b) == (~a & ~b)"
  solver.prove!(~(a | b) == (~a & ~b))
end

check_if_true_is_true
check_if_true_is_false
check_de_morgan_law_1
check_de_morgan_law_2
